generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum WalletType {
  external
  smart
  embedded
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  displayName String?
  avatar      String?
  isAdmin     Boolean  @default(false)
  createdAt   DateTime @default(now())
  ApiKey      ApiKey[]
  wallets     Wallet[]
}

model Wallet {
  id         Int      @id @default(autoincrement())
  address    String   @unique
  walletType String
  label      String?
  chainId    Int?
  metadata   Json?
  ensName    String?
  userId     Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model ApiKey {
  id             Int             @id @default(autoincrement())
  name           String
  clientId       String          @unique
  secretKey      String
  allowedDomains String
  bundleIds      String?
  isRevoked      Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime
  userId         Int
  User           User            @relation(fields: [userId], references: [id])
  ApiKeyServices ApiKeyServices?
}

model ApiKeyServices {
  id           Int     @id @default(autoincrement())
  apiKeyId     Int     @unique
  sdk          Boolean @default(true)
  rpc          Boolean @default(false)
  ipfsUpload   Boolean @default(false)
  ipfsDownload Boolean @default(false)
  bundler      Boolean @default(false)
  paymaster    Boolean @default(false)
  ApiKey       ApiKey  @relation(fields: [apiKeyId], references: [id])
}
